'use strict';
const angular = require('angular');
const uiRouter = require('angular-ui-router');
const swal = require('sweetalert');
import primitives from './primitives.min.js';

import routes from './allocationview.routes';
//var $ = require('jquery');
//window.jQuery = $;

export class allocationviewComponent {
  $http;
  rss;
  p;
  pefs;
  selectedPef;
  req;
  myrs;
  seatarray;
  user;
  scope;
  getCurrentUser : Function;

  /*@ngInject*/
  constructor($http, $scope, Auth) {
    this.$http = $http;
    this.getCurrentUser = Auth.getCurrentUser;
    this.scope = $scope;

  } //ctor
  
  /*@ngInject*/
  $onInit() {
    var $scope = this.scope;
    this.getCurrentUser( (user) => {
      this.user = user;
      this.seatarray = [];
      this.rss = [];
      
      this.$http.get('/api/pefRequirements/').then(responsePef => {
        this.p = this.pefs = responsePef.data;
        this.select(this.pefs[0]);

        this.$http.get('/api/rss/').then(rss => {
          this.rss = rss.data;
          this.getAllocations(rss.data, this.user, (res) => {
            this.seatarray.push(res);
          });
        });
      });


////PRIMITIVES
//	$scope.index = 10;
//    $scope.Message = "";
//console.log('56');
//
//      prim = new primitives;
//console.log(prim1);
//
//			let options = {};
//
//			let items = [
//				new primitives.orgdiagram.ItemConfig({
//					id: 0,
//					parent: null,
//					title: "Scott Aasrud",
//					description: "Root",
//					phone: "1 (416) 001-4567",
//					email: "scott.aasrud@mail.com",
////					image: "demo/images/photos/a.png",
//					itemTitleColor: primitives.common.Colors.RoyalBlue
//				}),
//				primitives.orgdiagram.ItemConfig({
//					id: 1,
//					parent: 0,
//					title: "Ted Lucas",
//					description: "Left",
//					phone: "1 (416) 002-4567",
//					email: "ted.lucas@mail.com",
////					image: "demo/images/photos/b.png",
//					itemTitleColor: primitives.common.Colors.RoyalBlue
//				}),
//				primitives.orgdiagram.ItemConfig({
//					id: 2,
//					parent: 0,
//					title: "Fritz Stuger",
//					description: "Right",
//					phone: "1 (416) 003-4567",
//					email: "joao.stuger@mail.com",
////					image: "demo/images/photos/c.png",
//					itemTitleColor: primitives.common.Colors.RoyalBlue
//				}),
//				primitives.orgdiagram.ItemConfig({
//					id: 3,
//					parent: 2,
//					title: "Hidden Node",
//					phone: "1 (416) 004-4567",
//					email: "hidden.node@mail.com",
//					description: "Dotted Node",
////					image: "demo/images/photos/e.png",
//					itemTitleColor: primitives.common.Colors.PaleVioletRed
//				})
//			];
//console.log('101');
//
//			options.items = items;
//			options.cursorItem = 0;
//			options.highlightItem = 0;
//			options.hasSelectorCheckbox = primitives.common.Enabled.True;
//			options.templates = [this.getContactTemplate()];
//			options.defaultTemplateName = "contactTemplate";
//console.log('108');
//
//			$scope.myOptions = options;
//
//			$scope.setCursorItem = function (item) {
//				$scope.myOptions.cursorItem = item;
//			};
//
//			$scope.setHighlightItem = function (item) {
//				$scope.myOptions.highlightItem = item;
//			};
//
//			$scope.deleteItem = function (index) {
//				$scope.myOptions.items.splice(index, 1);
//			}
//
//			$scope.addItem = function (index, parent) {
//				var id = $scope.index++;
//				$scope.myOptions.items.splice(index, 0, new primitives.orgdiagram.ItemConfig({
//					id: id,
//					parent: parent,
//					title: "New title " + id,
//					description: "New description " + id,
////					image: "demo/images/photos/b.png"
//				}));
//			}
//
//			$scope.onMyCursorChanged = function () {
//				$scope.Message = "onMyCursorChanged";
//			}
//
//			$scope.onMyHighlightChanged = function () {
//				$scope.Message = "onMyHighlightChanged";
//			}
//      
////      google.charts.load('current', {packages:["orgchart"]});
////      google.charts.setOnLoadCallback(this.drawChart);
    });   //GET USER

  } //oninit

  drawChart() {
//    var data = new google.visualization.DataTable();
//    data.addColumn('string', 'Name');
//    data.addColumn('string', 'Manager');
//    data.addColumn('string', 'ToolTip');
//
//    // For each orgchart box, provide the name, manager, and tooltip to show.
//    data.addRows([
//      [{v:'MCRC', f:'<div class="panel rs-panel rstest"><div class="panel-header headerfont-sm">MCRC</div>' +
//        '<div class="panel-body"><hr class="marginbottom10"><span class="pull-left">Res.</span><span class="pull-right">Roll-up</span><br>' +
//        '<span class="pull-left"><label>15/31</label></span><span class="pull-right">206/720</span></div><div class="panel-footer padtop10">' +
//      '<label class="margin0">Alloc: <input type="text" class="text-rs-footer" ng-model="vm.selectedPef.pefCode"></label></div></div>'},
//       '', ''],
//      [{v:'WRR', f:'<div class="panel rs-panel rstest"><div class="panel-header headerfont-sm">WRR</div>' +
//        '<div class="panel-body"><hr class="marginbottom10"><span class="pull-left">Res.</span><span class="pull-right">Roll-up</span><br>' +
//        '<span class="pull-left"><label>15/31</label></span><span class="pull-right">206/720</span></div><div class="panel-footer padtop10">' +
//      '<label class="margin0">Alloc: <input type="text" class="text-rs-footer" ng-model="vm.selectedPef.pefCode"></label></div></div>'},
//       'MCRC', ''],
//      [{v:'ERR', f:'<div class="panel rs-panel rstest"><div class="panel-header headerfont-sm">ERR</div>' +
//        '<div class="panel-body"><hr class="marginbottom10"><span class="pull-left">Res.</span><span class="pull-right">Roll-up</span><br>' +
//        '<span class="pull-left"><label>11/35</label></span><span class="pull-right">221/700</span></div><div class="panel-footer padtop10">' +
//      '<label class="margin0">Alloc: <input type="text" class="text-rs-footer" ng-model="vm.selectedPef.pefCode"></label></div></div>'},
//       'MCRC', ''],
//      [{v:'1MCD', f:'<div class="panel rs-panel rstest"><div class="panel-header headerfont-sm">1st MCD</div>' +
//        '<div class="panel-body"><hr class="marginbottom10"><span class="pull-left">Res.</span><span class="pull-right">Roll-up</span><br>' +
//        '<span class="pull-left"><label>11/35</label></span><span class="pull-right">221/700</span></div><div class="panel-footer padtop10">' +
//      '<label class="margin0">Alloc: <input type="text" class="text-rs-footer" ng-model="vm.selectedPef.pefCode"></label></div></div>'},
//       'ERR', ''],
//      [{v:'4MCD', f:'<div class="panel rs-panel rstest"><div class="panel-header headerfont-sm">4th MCD</div>' +
//        '<div class="panel-body"><hr class="marginbottom10"><span class="pull-left">Res.</span><span class="pull-right">Roll-up</span><br>' +
//        '<span class="pull-left"><label>11/35</label></span><span class="pull-right">221/700</span></div><div class="panel-footer padtop10">' +
//      '<label class="margin0">Alloc: <input type="text" class="text-rs-footer" ng-model="vm.selectedPef.pefCode"></label></div></div>'},
//       'ERR', ''],
//      [{v:'6MCD', f:'<div class="panel rs-panel rstest"><div class="panel-header headerfont-sm">6th MCD</div>' +
//        '<div class="panel-body"><hr class="marginbottom10"><span class="pull-left">Res.</span><span class="pull-right">Roll-up</span><br>' +
//        '<span class="pull-left"><label>11/35</label></span><span class="pull-right">221/700</span></div><div class="panel-footer padtop10">' +
//      '<label class="margin0">Alloc: <input type="text" class="text-rs-footer" ng-model="vm.selectedPef.pefCode"></label></div></div>'},
//       'ERR', ''],
//      [{v:'8MCD', f:'<div class="panel rs-panel rstest"><div class="panel-header headerfont-sm">8TH MCD</div>' +
//        '<div class="panel-body"><hr class="marginbottom10"><span class="pull-left">Res.</span><span class="pull-right">Roll-up</span><br>' +
//        '<span class="pull-left"><label>11/35</label></span><span class="pull-right">221/700</span></div><div class="panel-footer padtop10">' +
//      '<label class="margin0">Alloc: <input type="text" class="text-rs-footer" ng-model="vm.selectedPef.pefCode"></label></div></div>'},
//       'WRR', ''],
//      [{v:'9MCD', f:'<div class="panel rs-panel rstest"><div class="panel-header headerfont-sm">9th MCD</div>' +
//        '<div class="panel-body"><hr class="marginbottom10"><span class="pull-left">Res.</span><span class="pull-right">Roll-up</span><br>' +
//        '<span class="pull-left"><label>11/35</label></span><span class="pull-right">221/700</span></div><div class="panel-footer padtop10">' +
//      '<label class="margin0">Alloc: <input type="text" class="text-rs-footer" ng-model="vm.selectedPef.pefCode"></label></div></div>'},
//       'WRR', ''],
//      [{v:'12MCD', f:'<div class="panel rs-panel rstest"><div class="panel-header headerfont-sm">12th MCD</div>' +
//        '<div class="panel-body"><hr class="marginbottom10"><span class="pull-left">Res.</span><span class="pull-right">Roll-up</span><br>' +
//        '<span class="pull-left"><label>11/35</label></span><span class="pull-right">221/700</span></div><div class="panel-footer padtop10">' +
//      '<label class="margin0">Alloc: <input type="text" class="text-rs-footer" ng-model="vm.selectedPef.pefCode"></label></div></div>'},
//       'WRR', '']
//      ,[{v:'Frederick', f:'<div class="panel rs-panel rstest"><div class="panel-header headerfont-sm">Frederick</div>' +
//        '<div class="panel-body"><hr class="marginbottom10"><span class="pull-left">Res.</span><span class="pull-right">Roll-up</span><br>' +
//        '<span class="pull-left"><label>11/35</label></span><span class="pull-right">221/700</span></div><div class="panel-footer padtop10">' +
//      '<label class="margin0">Alloc: <input type="text" class="text-rs-footer" ng-model="vm.selectedPef.pefCode"></label></div></div>'},
//       '4MCD', ''],
//      [{v:'Lansing', f:'<div class="panel rs-panel rstest"><div class="panel-header headerfont-sm">Lansing</div>' +
//        '<div class="panel-body"><hr class="marginbottom10"><span class="pull-left">Res.</span><span class="pull-right">Roll-up</span><br>' +
//        '<span class="pull-left"><label>11/35</label></span><span class="pull-right">221/700</span></div><div class="panel-footer padtop10">' +
//      '<label class="margin0">Alloc: <input type="text" class="text-rs-footer" ng-model="vm.selectedPef.pefCode"></label></div></div>'},
//       '4MCD', '']
//    ]);
//
//    var options = {allowHtml: true};
//    var foo = angular.element(document.getElementById('divchart'))[0];
//
//    // Create the chart.
//    var chart = new google.visualization.OrgChart(foo);
//    chart.draw(data, options);
  }

    getContactTemplate() {
      console.log('in getcontacttemplate');
      console.log('224');

        var result = new primitives.orgdiagram.TemplateConfig();
        result.name = "contactTemplate";

        result.itemSize = new primitives.common.Size(220, 120);
        result.minimizedItemSize = new primitives.common.Size(5, 5);
        result.minimizedItemCornerRadius = 5;
        result.highlightPadding = new primitives.common.Thickness(2, 2, 2, 2);


        var itemTemplate = angular.element(
             '<div class="bp-item bp-corner-all bt-item-frame">'
            + '<div name="titleBackground" class="bp-item bp-corner-all bp-title-frame" style="background:{{itemTitleColor}};top: 2px; left: 2px; width: 216px; height: 20px;">'
                + '<div name="title" class="bp-item bp-title" style="top: 3px; left: 6px; width: 208px; height: 18px;">{{itemConfig.title}}</div>'
            + '</div>'
            + '<div class="bp-item bp-photo-frame" style="top: 26px; left: 2px; width: 50px; height: 60px;">'
                + '<img name="photo" src="{{itemConfig.image}}" style="height: 60px; width:50px;" />'
            + '</div>'
            + '<div name="phone" class="bp-item" style="top: 26px; left: 56px; width: 162px; height: 18px; font-size: 12px;">{{itemConfig.phone}}</div>'
            + '<div class="bp-item" style="top: 44px; left: 56px; width: 162px; height: 18px; font-size: 12px;"><a name="email" href="mailto::{{itemConfig.email}}" target="_top">{{itemConfig.email}}</a></div>'
            + '<div name="description" class="bp-item" style="top: 62px; left: 56px; width: 162px; height: 36px; font-size: 10px;">{{itemConfig.description}}</div>'
        + '</div>'
        ).css({
            width: result.itemSize.width + "px",
            height: result.itemSize.height + "px"
        }).addClass("bp-item bp-corner-all bt-item-frame");
        result.itemTemplate = itemTemplate.wrap('<div>').parent().html();

        return result;
    }


  select(pef) {
    this.selectedPef = pef;
    
    if (this.myrs!=undefined) {
      this.seatarray.push(this.myrs[0].allocation[this.selectedPef.pefCode.toLowerCase()].plan);
    }
  }

  getAllocations(rss, user, cb) {
    if (this.myrs===undefined) {
      this.myrs = rss.filter(function( obj ) {
        return obj.rs === user.rs;
      });
    }

//     cb(this.myrs[0].allocation[this.selectedPef.pefCode.toLowerCase()].plan);
  }
  
  waive(obj) {
    obj.iswaived = !obj.iswaived;
    obj.flag = !obj.iswaived;
    
    if (obj.iswaived) {
      this.selectedPef.errs -= 1;
      this.selectedPef.waivercount += 1;
    }
    else {
      this.selectedPef.errs += 1;
      this.selectedPef.waivercount -= 1;
    }
    this.pefs.sort();
  }


}// class


// angular.module('BasicPrimitives', [], function ($compileProvider) {
//    $compileProvider.directive('bpOrgDiagram', function ($compile) {
//        function link(scope, element, attrs) {
//            var itemScopes = [];
//
//            let config = new primitives.orgdiagram.Config();
//   console.log('set config @ 301');
//            angular.extend(config, scope.options);
//
//            config.onItemRender = onTemplateRender;
//            config.onCursorChanged = onCursorChanged;
//            config.onHighlightChanged = onHighlightChanged;
//
//          console.log(angular(element(config)));
//            let chart = angular.element(element).orgDiagram(config);
//          
//            scope.$watch('options.highlightItem', function (newValue, oldValue) {
//                var highlightItem = chart.orgDiagram("option", "highlightItem");
//                if (highlightItem != newValue) {
//                    chart.orgDiagram("option", { highlightItem: newValue });
//                    chart.orgDiagram("update", primitives.orgdiagram.UpdateMode.PositonHighlight);
//                }
//            });
//
//            scope.$watch('options.cursorItem', function (newValue, oldValue) {
//                var cursorItem = chart.orgDiagram("option", "cursorItem");
//                if (cursorItem != newValue) {
//                    chart.orgDiagram("option", { cursorItem: newValue });
//                    chart.orgDiagram("update", primitives.orgdiagram.UpdateMode.Refresh);
//                }
//            });
//
//            scope.$watchCollection('options.items', function (items) {
//                chart.orgDiagram("option", { items: items });
//                chart.orgDiagram("update", primitives.orgdiagram.UpdateMode.Refresh);
//            });
//
//            function onTemplateRender(event, data) {
//              console.log('332');
//console.log('in ONTEMPLATERENDER');
//
//                var itemConfig = data.context;
//
//                switch (data.renderingMode) {
//                    case primitives.common.RenderingMode.Create:
//                        /* Initialize widgets here */
//                        var itemScope = scope.$new();
//                        itemScope.itemConfig = itemConfig;
//                        $compile(data.element.contents())(itemScope);
//                        if (!scope.$parent.$$phase) {
//                            itemScope.$apply();
//                        }
//                        itemScopes.push(itemScope);
//                        break;
//                    case primitives.common.RenderingMode.Update:
//                        /* Update widgets here */
//                        var itemScope = data.element.contents().scope();
//                        itemScope.itemConfig = itemConfig;
//                        break;
//                }
//            }
//
//            function onButtonClick(e, data) {
//                scope.onButtonClick();
//                scope.$apply();
//            }
//
//            function onCursorChanged(e, data) {
//                scope.options.cursorItem = data.context ? data.context.id : null;
//                scope.onCursorChanged();
//                scope.$apply();
//            }
//
//            function onHighlightChanged(e, data) {
//                scope.options.highlightItem = data.context ? data.context.id : null;
//                scope.onHighlightChanged();
//                scope.$apply();
//            }
//
//            element.on('$destroy', function () {
//                /* destroy items scopes */
//                for (var index = 0; index < itemScopes.length; index++) {
//                    itemScopes[index].$destroy();
//                }
//
//                /* destory jQuery UI widget instance */
//                chart.remove();
//            });
//        };
//
//        return {
//            scope: {
//                options: '=options',
//                onCursorChanged: '&onCursorChanged',
//                onHighlightChanged: '&onHighlightChanged',
//            },
//            link: link
//        };
//    });
//});

export default angular.module('mcrissDemoApp.allocationview', [uiRouter, 'BasicPrimitives'])
  .config(routes)
  .component('allocationview', {
    template: require('./allocationview.html'),
    controller: allocationviewComponent,
    controllerAs: 'vm'
  })
  .name;
